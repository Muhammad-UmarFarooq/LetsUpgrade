# file name  --  app.py
# we have to install ollama api or ollama tool from website ollama.com before running the code
# pip install streamlit
import streamlit as st
from datetime import datetime
import requests
import json
from callollama import callOLLAMA

st.set_page_config(
    page_title = 'chatbot'
)

# Initialize session state
if "messages" not in st.session_state:
    st.session_state.messages = []
    st.session_state.messages.append(
            {
                "role" : "assistant",
                "content" : "Hello, I am smart chatbot. How can I help you ?"
            }
        )
if "is_typing" not in st.session_state:
    st.session_state.is_typing = False

# UI Layout
st.title("Offline LLM")
st.markdown("Welcome to OFFline GPT")
st.subheader("Chat Here")


# Display chat history
for message in st.session_state.messages:
    if message["role"]  == "user":
        st.info(message["content"])
    else:
        st.success(message["content"])  

# Show typing status
if st.session_state.is_typing:
    st.markdown("Bot is typing...")
    st.warning("Typing...")

st.markdown("---")
st.subheader("Your Message")


# Input form
with st.form(key="chat_form",clear_on_submit=True):
    user_input = st.text_input(
        "Type your message",
        placeholder="Ask me anything..."
    )
    send_button = st.form_submit_button("send message", type= "primary")

# Two-column layout for buttons
col1,col2 = st.columns([1,1])
with col1:
    clear_button = st.button("clear chat")


# Clear chat logic
if clear_button:
    st.session_state.messages = []
    st.rerun()

# Process user message
if send_button and user_input.strip():
    st.session_state.messages.append(
        {
            "role": "user",
            "content": user_input.strip() 
        }
    ) 
    st.session_state.is_typing = True   
    st.rerun()

# Generate bot response
if st.session_state.is_typing:
    user_message = st.session_state.messages[-1]["content"]
    bot_response = callOLLAMA(user_message)
    st.session_state.messages.append(
        {
            "role": "assistant",
            "content": bot_response
        }
    )
    st.session_state.is_typing = False
    st.rerun()
